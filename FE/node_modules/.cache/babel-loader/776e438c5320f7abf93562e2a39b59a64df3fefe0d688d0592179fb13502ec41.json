{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n_c = PageLayout;\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n_c2 = MainContent;\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n_c3 = PostGrid;\nconst Country = styled.div`\n    color: #333;\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n`;\n_c4 = Country;\nconst FilterButtons = styled.div`\nmargin-bottom: 20px;\n`;\n_c5 = FilterButtons;\nconst FilterButton = styled.button`\nmargin-right: 10px;\npadding: 5px 10px;\nbackground-color: ${props => props.active ? '#007bff' : '#f8f9fa'};\ncolor: ${props => props.active ? 'white' : 'black'};\nborder: 1px solid #007bff;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover {\n  background-color: #007bff;\n  color: white;\n}\n`;\n_c6 = FilterButton;\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('likes'); // 'likes' or 'date'\n\n  useEffect(() => {\n    // 여기서 DB나 API로부터 데이터를 가져옵니다.\n    const fetchedPosts = [{\n      id: 1,\n      title: \"파리에서의 3일\",\n      likes: 42,\n      author: \"여행자123\",\n      date: \"2023-07-15\",\n      preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n      continent: \"유럽\",\n      country: \"프랑스\"\n    }, {\n      id: 2,\n      title: \"베르사유 궁전 탐방\",\n      likes: 38,\n      author: \"역사탐험가\",\n      date: \"2023-07-20\",\n      preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n      continent: \"유럽\",\n      country: \"프랑스\"\n    }\n    // ... 더 많은 포스트 데이터\n    ];\n    setPosts(fetchedPosts);\n  }, []);\n  useEffect(() => {\n    const sortedPosts = [...posts].sort((a, b) => {\n      if (sortBy === 'likes') {\n        return b.likes - a.likes;\n      } else {\n        return new Date(b.date) - new Date(a.date);\n      }\n    });\n    setPosts(sortedPosts);\n  }, [sortBy, posts]);\n  const handleSortChange = newSortBy => {\n    setSortBy(newSortBy);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(Country, {\n          children: \"\\uD504\\uB791\\uC2A4\\uD83C\\uDDEB\\uD83C\\uDDF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: () => handleSortChange('likes'),\n            active: sortBy === 'likes',\n            children: \"\\uC88B\\uC544\\uC694 \\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: () => handleSortChange('date'),\n            active: sortBy === 'date',\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n            title: post.title,\n            likes: post.likes,\n            author: post.author,\n            date: post.date,\n            preview: post.preview,\n            continent: post.continent,\n            country: post.country\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(PostList, \"oUv+hvjiRBaJo1/BTWoN7jBryjU=\");\n_c7 = PostList;\nexport default PostList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"PageLayout\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"PostGrid\");\n$RefreshReg$(_c4, \"Country\");\n$RefreshReg$(_c5, \"FilterButtons\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","styled","Header","Sidebar","PostCard","jsxDEV","_jsxDEV","Fragment","_Fragment","PageLayout","div","_c","MainContent","main","_c2","PostGrid","_c3","Country","_c4","FilterButtons","_c5","FilterButton","button","props","active","_c6","PostList","_s","posts","setPosts","sortBy","setSortBy","fetchedPosts","id","title","likes","author","date","preview","continent","country","sortedPosts","sort","a","b","Date","handleSortChange","newSortBy","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","post","_c7","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\n\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n\nconst Country = styled.div`\n    color: #333;\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n`\n\nconst FilterButtons = styled.div`\nmargin-bottom: 20px;\n`;\n\nconst FilterButton = styled.button`\nmargin-right: 10px;\npadding: 5px 10px;\nbackground-color: ${props => props.active ? '#007bff' : '#f8f9fa'};\ncolor: ${props => props.active ? 'white' : 'black'};\nborder: 1px solid #007bff;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover {\n  background-color: #007bff;\n  color: white;\n}\n`;\n\nconst PostList = () => {\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('likes'); // 'likes' or 'date'\n\n  useEffect(() => {\n      // 여기서 DB나 API로부터 데이터를 가져옵니다.\n      const fetchedPosts = [\n          {\n              id: 1,\n              title: \"파리에서의 3일\",\n              likes: 42,\n              author: \"여행자123\",\n              date: \"2023-07-15\",\n              preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n              continent: \"유럽\",\n              country: \"프랑스\"\n          },\n          {\n              id: 2,\n              title: \"베르사유 궁전 탐방\",\n              likes: 38,\n              author: \"역사탐험가\",\n              date: \"2023-07-20\",\n              preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n              continent: \"유럽\",\n              country: \"프랑스\"\n          },\n          // ... 더 많은 포스트 데이터\n      ];\n\n      setPosts(fetchedPosts);\n  }, []);\n\n  useEffect(() => {\n      const sortedPosts = [...posts].sort((a, b) => {\n          if (sortBy === 'likes') {\n              return b.likes - a.likes;\n          } else {\n              return new Date(b.date) - new Date(a.date);\n          }\n      });\n      setPosts(sortedPosts);\n  }, [sortBy,posts]);\n\n  const handleSortChange = (newSortBy) => {\n      setSortBy(newSortBy);\n  };\n\n  return (\n      <>\n          <Header />\n          <PageLayout>\n              <Sidebar />\n              <MainContent>\n                  <Country>프랑스🇫🇷</Country>\n                  <FilterButtons>\n                      <FilterButton \n                          onClick={() => handleSortChange('likes')}\n                          active={sortBy === 'likes'}\n                      >\n                          좋아요 순\n                      </FilterButton>\n                      <FilterButton \n                          onClick={() => handleSortChange('date')}\n                          active={sortBy === 'date'}\n                      >\n                          최신순\n                      </FilterButton>\n                  </FilterButtons>\n                  <PostGrid>\n                      {posts.map(post => (\n                          <PostCard \n                              key={post.id}\n                              title={post.title}\n                              likes={post.likes}\n                              author={post.author}\n                              date={post.date}\n                              preview={post.preview}\n                              continent={post.continent}\n                              country={post.country}\n                          />\n                      ))}\n                  </PostGrid>\n              </MainContent>\n          </PageLayout>\n      </>\n  );\n}\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}