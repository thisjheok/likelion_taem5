{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/src/pages/CommunityPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n_c = PageLayout;\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n_c2 = MainContent;\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n_c3 = PostGrid;\nconst CardContainer = styled.div`\n  width: 300px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin: 16px;\n  background-color: #ffffff;\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n  }\n`;\n_c4 = CardContainer;\nconst CardHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n  ${CardContainer}:hover & {\n    background-color: #f5f5f5;\n  }\n`;\n_c5 = CardHeader;\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  color: #333;\n  ${CardContainer}:hover & {\n    color: #FFD43B;\n  }\n`;\n_c6 = Title;\nconst LikeCount = styled.span`\n  float: right;\n  color: #ff4081;\n`;\n_c7 = LikeCount;\nconst CardBody = styled.div`\n  padding: 16px;\n`;\n_c8 = CardBody;\nconst Author = styled.p`\n  margin: 0;\n  font-size: 14px;\n  color: #666;\n`;\n_c9 = Author;\nconst Date = styled.span`\n  margin-left: 8px;\n  font-size: 12px;\n  color: #999;\n`;\n_c10 = Date;\nconst Preview = styled.p`\n  margin: 8px 0;\n  font-size: 14px;\n  color: #333;\n`;\n_c11 = Preview;\nconst formatDate = dateString => {\n  if (!dateString) return 'Unknown date';\n  const date = new Date(dateString);\n  return isNaN(date.getTime()) ? 'Invalid date' : date.toLocaleDateString();\n};\nconst CommunityPage = () => {\n  _s();\n  const [postsData, setPostsData] = useState({\n    category_name: \"\",\n    posts: []\n  });\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://43.200.226.225/intern/community/postlist/');\n        setPostsData(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: postsData.category_name || \"커뮤니티\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n          children: postsData.posts.map(post => /*#__PURE__*/_jsxDEV(CardContainer, {\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              children: /*#__PURE__*/_jsxDEV(Title, {\n                children: [post.title, \" \", /*#__PURE__*/_jsxDEV(LikeCount, {\n                  children: [\"\\u2764 \", post.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 39\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n              children: [/*#__PURE__*/_jsxDEV(Author, {\n                children: [post.author_id || '익명', \" \", /*#__PURE__*/_jsxDEV(Date, {\n                  children: formatDate(post.created_at)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Preview, {\n                children: post.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(CommunityPage, \"/pa6cxIqSTcW7/bKbYYDSRKpagk=\");\n_c12 = CommunityPage;\nexport default CommunityPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12;\n$RefreshReg$(_c, \"PageLayout\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"PostGrid\");\n$RefreshReg$(_c4, \"CardContainer\");\n$RefreshReg$(_c5, \"CardHeader\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"LikeCount\");\n$RefreshReg$(_c8, \"CardBody\");\n$RefreshReg$(_c9, \"Author\");\n$RefreshReg$(_c10, \"Date\");\n$RefreshReg$(_c11, \"Preview\");\n$RefreshReg$(_c12, \"CommunityPage\");","map":{"version":3,"names":["React","useState","useEffect","styled","Header","Sidebar","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PageLayout","div","_c","MainContent","main","_c2","PostGrid","_c3","CardContainer","_c4","CardHeader","_c5","Title","h2","_c6","LikeCount","span","_c7","CardBody","_c8","Author","p","_c9","Date","_c10","Preview","_c11","formatDate","dateString","date","isNaN","getTime","toLocaleDateString","CommunityPage","_s","postsData","setPostsData","category_name","posts","fetchPosts","response","get","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","title","likes","author_id","created_at","content","id","_c12","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/src/pages/CommunityPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport axios from 'axios';\n\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n\nconst CardContainer = styled.div`\n  width: 300px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  margin: 16px;\n  background-color: #ffffff;\n  &:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 4px 8px rgba(0,0,0,0.2);\n  }\n`;\n\nconst CardHeader = styled.div`\n  padding: 16px;\n  border-bottom: 1px solid #e0e0e0;\n  ${CardContainer}:hover & {\n    background-color: #f5f5f5;\n  }\n`;\n\nconst Title = styled.h2`\n  margin: 0;\n  font-size: 18px;\n  color: #333;\n  ${CardContainer}:hover & {\n    color: #FFD43B;\n  }\n`;\n\nconst LikeCount = styled.span`\n  float: right;\n  color: #ff4081;\n`;\n\nconst CardBody = styled.div`\n  padding: 16px;\n`;\n\nconst Author = styled.p`\n  margin: 0;\n  font-size: 14px;\n  color: #666;\n`;\n\nconst Date = styled.span`\n  margin-left: 8px;\n  font-size: 12px;\n  color: #999;\n`;\n\nconst Preview = styled.p`\n  margin: 8px 0;\n  font-size: 14px;\n  color: #333;\n`;\n\nconst formatDate = (dateString) => {\n  if (!dateString) return 'Unknown date';\n  const date = new Date(dateString);\n  return isNaN(date.getTime()) ? 'Invalid date' : date.toLocaleDateString();\n};\n\nconst CommunityPage = () => {\n  const [postsData, setPostsData] = useState({ category_name: \"\", posts: [] });\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://43.200.226.225/intern/community/postlist/');\n        setPostsData(response.data);\n      } catch (error) {\n        console.error('Error fetching posts:', error);\n      }\n    };\n\n    fetchPosts();\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <PageLayout>\n        <Sidebar />\n        <MainContent>\n          <h1>{postsData.category_name || \"커뮤니티\"}</h1>\n          <PostGrid>\n            {postsData.posts.map((post) => (\n              <CardContainer key={post.id}>\n                <CardHeader>\n                  <Title>{post.title} <LikeCount>❤ {post.likes}</LikeCount></Title>\n                </CardHeader>\n                <CardBody>\n                  <Author>{post.author_id || '익명'} <Date>{formatDate(post.created_at)}</Date></Author>\n                  <Preview>{post.content}</Preview>\n                </CardBody>\n              </CardContainer>\n            ))}\n          </PostGrid>\n        </MainContent>\n      </PageLayout>\n    </>\n  );\n};\n\nexport default CommunityPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}