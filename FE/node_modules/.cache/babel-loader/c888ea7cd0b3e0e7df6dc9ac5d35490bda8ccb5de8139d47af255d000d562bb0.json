{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostRead.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  background-color: #fff;\n`;\n_c = Container;\nconst PostRead = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c2 = PostRead;\nexport default PostRead;\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"PostRead\");","map":{"version":3,"names":["React","styled","Header","Sidebar","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","PostRead","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostRead.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  background-color: #fff;\n`;\n\nconst PostRead = ()=>{\n    return(\n        <>\n            <Header/>\n            <Container>\n                <Sidebar/>\n            </Container>\n        </>\n    );\n}\n\nexport default PostRead;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5C,MAAMC,SAAS,GAAGP,MAAM,CAACQ,GAAG;AAC5B;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,SAAS;AAOf,MAAMG,QAAQ,GAAGA,CAAA,KAAI;EACjB,oBACIN,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACIP,OAAA,CAACH,MAAM;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTX,OAAA,CAACG,SAAS;MAAAI,QAAA,eACNP,OAAA,CAACF,OAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACd,CAAC;AAEX,CAAC;AAAAC,GAAA,GATKN,QAAQ;AAWd,eAAeA,QAAQ;AAAC,IAAAD,EAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAR,EAAA;AAAAQ,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}