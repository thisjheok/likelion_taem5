{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/src/pages/PostRead.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  background-color: #fff;\n`;\n_c = Container;\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n_c2 = MainContent;\nconst PostTitle = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n_c3 = PostTitle;\nconst PostInfo = styled.div`\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 20px;\n`;\n_c4 = PostInfo;\nconst PostBody = styled.div`\n  font-size: 16px;\n  line-height: 1.6;\n  margin-bottom: 30px;\n`;\n_c5 = PostBody;\nconst PostRead = () => {\n  _s();\n  const {\n    postId\n  } = useParams();\n  const [postData, setPostData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPostData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(`http://43.200.226.225/intern/community/${postId}/`);\n        console.log('API Response:', response.data); // 응답 데이터를 콘솔에 출력\n        setPostData(response.data);\n      } catch (error) {\n        console.error('Error fetching post data:', error);\n        setError('게시글을 불러오는 데 실패했습니다.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchPostData();\n  }, [postId]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB85C\\uB529 \\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n  if (!postData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(PostTitle, {\n          children: postData.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostInfo, {\n          children: [\"\\uC791\\uC131\\uC790: \", postData.author_id || '익명', \" | \\uC791\\uC131\\uC77C: \", postData.created_at || 'Unknown date']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostBody, {\n          children: postData.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PostRead, \"wz2A903YozSsZ2dOsDH7FeO/fHo=\", false, function () {\n  return [useParams];\n});\n_c6 = PostRead;\nexport default PostRead;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"PostTitle\");\n$RefreshReg$(_c4, \"PostInfo\");\n$RefreshReg$(_c5, \"PostBody\");\n$RefreshReg$(_c6, \"PostRead\");","map":{"version":3,"names":["React","useState","useEffect","styled","Header","Sidebar","useParams","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Container","div","_c","MainContent","_c2","PostTitle","h1","_c3","PostInfo","_c4","PostBody","_c5","PostRead","_s","postId","postData","setPostData","isLoading","setIsLoading","error","setError","fetchPostData","response","get","console","log","data","children","fileName","_jsxFileName","lineNumber","columnNumber","title","author_id","created_at","content","_c6","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/src/pages/PostRead.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  background-color: #fff;\n`;\n\nconst MainContent = styled.div`\n  flex: 1;\n  padding: 20px;\n`;\n\nconst PostTitle = styled.h1`\n  font-size: 24px;\n  margin-bottom: 10px;\n`;\n\nconst PostInfo = styled.div`\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 20px;\n`;\n\nconst PostBody = styled.div`\n  font-size: 16px;\n  line-height: 1.6;\n  margin-bottom: 30px;\n`;\n\nconst PostRead = () => {\n  const { postId } = useParams();\n  const [postData, setPostData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchPostData = async () => {\n      setIsLoading(true);\n      setError(null);\n      try {\n        const response = await axios.get(`http://43.200.226.225/intern/community/${postId}/`);\n        console.log('API Response:', response.data);  // 응답 데이터를 콘솔에 출력\n        setPostData(response.data);\n      } catch (error) {\n        console.error('Error fetching post data:', error);\n        setError('게시글을 불러오는 데 실패했습니다.');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchPostData();\n  }, [postId]);\n\n  if (isLoading) return <div>로딩 중...</div>;\n  if (error) return <div>에러: {error}</div>;\n  if (!postData) return <div>게시글을 찾을 수 없습니다.</div>;\n\n  return (\n    <>\n      <Header />\n      <Container>\n        <Sidebar />\n        <MainContent>\n          <PostTitle>{postData.title}</PostTitle>\n          <PostInfo>\n            작성자: {postData.author_id || '익명'} | 작성일: {postData.created_at || 'Unknown date'}\n          </PostInfo>\n          <PostBody>{postData.content}</PostBody>\n        </MainContent>\n      </Container>\n    </>\n  );\n};\n\nexport default PostRead;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}