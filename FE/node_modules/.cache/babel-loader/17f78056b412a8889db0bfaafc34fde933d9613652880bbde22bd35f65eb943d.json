{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n_c = PageLayout;\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n_c2 = MainContent;\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n_c3 = PostGrid;\nconst Country = styled.div`\n    color: #333;\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n`;\n_c4 = Country;\nconst FilterButtons = styled.div`\nmargin-bottom: 20px;\n`;\n_c5 = FilterButtons;\nconst FilterButton = styled.button`\nmargin-right: 10px;\npadding: 5px 10px;\nbackground-color: ${props => props.active ? '#FFD43B' : '#f8f9fa'};\ncolor: ${props => props.active ? 'white' : 'black'};\nborder: 1px solid #FFD43B;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover {\n  background-color: #FFD43B;\n  color: white;\n}\n`;\n_c6 = FilterButton;\nconst PostList = () => {\n  _s();\n  const {\n    country\n  } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('likes'); // 'likes' or 'date'\n  const countryInfo = {\n    canada: {\n      korName: '캐나다',\n      flag: '🇨🇦'\n    },\n    australia: {\n      korName: '호주',\n      flag: '🇦🇺'\n    },\n    newzealand: {\n      korName: '뉴질랜드',\n      flag: '🇳🇿'\n    },\n    england: {\n      korName: '영국',\n      flag: '🇬🇧'\n    },\n    netherlands: {\n      korName: '네덜란드',\n      flag: '🇳🇱'\n    },\n    germany: {\n      korName: '독일',\n      flag: '🇩🇪'\n    },\n    france: {\n      korName: '프랑스',\n      flag: '🇫🇷'\n    }\n  };\n  const fetchPosts = useCallback(() => {\n    // 여기서 DB나 API로부터 데이터를 가져옵니다.\n    const fetchedPosts = [{\n      id: 1,\n      title: \"파리에서의 3일\",\n      likes: 42,\n      author: \"여행자123\",\n      date: \"2023-07-15\",\n      preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n      continent: \"유럽\",\n      country: \"france\"\n    }, {\n      id: 2,\n      title: \"베르사유 궁전 탐방\",\n      likes: 38,\n      author: \"역사탐험가\",\n      date: \"2023-07-20\",\n      preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n      continent: \"유럽\",\n      country: \"australia\"\n    }\n    // ... 더 많은 포스트 데이터\n    ];\n    const filteredPosts = fetchedPosts.filter(post => post.country === country);\n    return filteredPosts;\n  }, [country]);\n  useEffect(() => {\n    const fetchedPosts = fetchPosts();\n    setPosts(fetchedPosts);\n  }, [fetchPosts]);\n  const sortPosts = useCallback(postsToSort => {\n    return [...postsToSort].sort((a, b) => {\n      if (sortBy === 'likes') {\n        return b.likes - a.likes;\n      } else {\n        return new Date(b.date) - new Date(a.date);\n      }\n    });\n  }, [sortBy]);\n  useEffect(() => {\n    setPosts(prevPosts => sortPosts(prevPosts));\n  }, [sortBy, sortPosts]);\n  const handleSortChange = newSortBy => {\n    setSortBy(newSortBy);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(Country, {\n          children: [country, \" \\uD83C\\uDDEB\\uD83C\\uDDF7\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n          children: [/*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: () => handleSortChange('likes'),\n            active: sortBy === 'likes',\n            children: \"\\uC88B\\uC544\\uC694 \\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(FilterButton, {\n            onClick: () => handleSortChange('date'),\n            active: sortBy === 'date',\n            children: \"\\uCD5C\\uC2E0\\uC21C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n            title: post.title,\n            likes: post.likes,\n            author: post.author,\n            date: post.date,\n            preview: post.preview,\n            continent: post.continent,\n            country: post.country\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_s(PostList, \"1o6O2YvA4Rf1mBOBYXrTzJeHXWI=\", false, function () {\n  return [useParams];\n});\n_c7 = PostList;\nexport default PostList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"PageLayout\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"PostGrid\");\n$RefreshReg$(_c4, \"Country\");\n$RefreshReg$(_c5, \"FilterButtons\");\n$RefreshReg$(_c6, \"FilterButton\");\n$RefreshReg$(_c7, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","Header","Sidebar","PostCard","useParams","jsxDEV","_jsxDEV","Fragment","_Fragment","PageLayout","div","_c","MainContent","main","_c2","PostGrid","_c3","Country","_c4","FilterButtons","_c5","FilterButton","button","props","active","_c6","PostList","_s","country","posts","setPosts","sortBy","setSortBy","countryInfo","canada","korName","flag","australia","newzealand","england","netherlands","germany","france","fetchPosts","fetchedPosts","id","title","likes","author","date","preview","continent","filteredPosts","filter","post","sortPosts","postsToSort","sort","a","b","Date","prevPosts","handleSortChange","newSortBy","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","_c7","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback} from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\nimport { useParams } from 'react-router-dom';\n\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\n\nconst Country = styled.div`\n    color: #333;\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n`\n\nconst FilterButtons = styled.div`\nmargin-bottom: 20px;\n`;\n\nconst FilterButton = styled.button`\nmargin-right: 10px;\npadding: 5px 10px;\nbackground-color: ${props => props.active ? '#FFD43B' : '#f8f9fa'};\ncolor: ${props => props.active ? 'white' : 'black'};\nborder: 1px solid #FFD43B;\nborder-radius: 5px;\ncursor: pointer;\n\n&:hover {\n  background-color: #FFD43B;\n  color: white;\n}\n`;\n\nconst PostList = () => {\n  const { country } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState('likes'); // 'likes' or 'date'\n  const countryInfo = {\n    canada: { korName: '캐나다', flag: '🇨🇦' },\n    australia: { korName: '호주', flag: '🇦🇺' },\n    newzealand: { korName: '뉴질랜드', flag: '🇳🇿' },\n    england: { korName: '영국', flag: '🇬🇧' },\n    netherlands: { korName: '네덜란드', flag: '🇳🇱' },\n    germany: { korName: '독일', flag: '🇩🇪' },\n    france: { korName: '프랑스', flag: '🇫🇷' }\n  };\n  const fetchPosts = useCallback(() => {\n      // 여기서 DB나 API로부터 데이터를 가져옵니다.\n      const fetchedPosts = [\n          {\n              id: 1,\n              title: \"파리에서의 3일\",\n              likes: 42,\n              author: \"여행자123\",\n              date: \"2023-07-15\",\n              preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n              continent: \"유럽\",\n              country: \"france\"\n          },\n          {\n              id: 2,\n              title: \"베르사유 궁전 탐방\",\n              likes: 38,\n              author: \"역사탐험가\",\n              date: \"2023-07-20\",\n              preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n              continent: \"유럽\",\n              country: \"australia\"\n          },\n          // ... 더 많은 포스트 데이터\n      ];\n      const filteredPosts = fetchedPosts.filter(post => post.country === country);\n      return filteredPosts;\n    }, [country]);\n\n\n  useEffect(() => {\n    const fetchedPosts = fetchPosts();\n    setPosts(fetchedPosts);\n  }, [fetchPosts]);\n\n  const sortPosts = useCallback((postsToSort) => {\n    return [...postsToSort].sort((a, b) => {\n      if (sortBy === 'likes') {\n        return b.likes - a.likes;\n      } else {\n        return new Date(b.date) - new Date(a.date);\n      }\n    });\n  }, [sortBy]);\n\n  useEffect(() => {\n    setPosts(prevPosts => sortPosts(prevPosts));\n  }, [sortBy, sortPosts]);\n\n  const handleSortChange = (newSortBy) => {\n    setSortBy(newSortBy);\n  };\n\n  return (\n      <>\n          <Header />\n          <PageLayout>\n              <Sidebar />\n              <MainContent>\n                  <Country>{country} 🇫🇷</Country>\n                  <FilterButtons>\n                      <FilterButton \n                          onClick={() => handleSortChange('likes')}\n                          active={sortBy === 'likes'}\n                      >\n                          좋아요 순\n                      </FilterButton>\n                      <FilterButton \n                          onClick={() => handleSortChange('date')}\n                          active={sortBy === 'date'}\n                      >\n                          최신순\n                      </FilterButton>\n                  </FilterButtons>\n                  <PostGrid>\n                      {posts.map(post => (\n                          <PostCard \n                              key={post.id}\n                              title={post.title}\n                              likes={post.likes}\n                              author={post.author}\n                              date={post.date}\n                              preview={post.preview}\n                              continent={post.continent}\n                              country={post.country}\n                          />\n                      ))}\n                  </PostGrid>\n              </MainContent>\n          </PageLayout>\n      </>\n  );\n}\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}