{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;//PostList.jsx\nimport React,{useState,useEffect,useCallback}from\"react\";import styled from\"styled-components\";import Header from\"../components/Header\";import Sidebar from\"../components/Sidebar\";import PostCard from\"../components/PostCard\";import{useParams}from\"react-router-dom\";import{Link}from\"react-router-dom\";import axios from\"axios\";import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const PageLayout=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  min-height: 100vh;\\n\"])));const MainContent=styled.main(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  flex-grow: 1;\\n  padding: 20px;\\n  background-color: #f5f5f5;\\n\"])));const PostGrid=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\\n  gap: 20px;\\n\"])));const StyledLink=styled(Link)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  text-decoration: none;\\n  /* \\uC6D0\\uD558\\uB294 \\uB2E4\\uB978 \\uC2A4\\uD0C0\\uC77C\\uB3C4 \\uCD94\\uAC00\\uD560 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4 */\\n  color: inherit; /* \\uB9C1\\uD06C \\uC0C9\\uC0C1\\uC744 \\uBD80\\uBAA8 \\uC694\\uC18C\\uC758 \\uC0C9\\uC0C1\\uC73C\\uB85C \\uC0C1\\uC18D */\\n\"])));const Country=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: #333;\\n  margin: 0;\\n  font-size: 24px;\\n  font-weight: bold;\\n\"])));const FilterButtons=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  margin-bottom: 20px;\\n\"])));const FilterButton=styled.button(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  margin-right: 10px;\\n  padding: 5px 10px;\\n  background-color: \",\";\\n  color: \",\";\\n  border: 1px solid #ffd43b;\\n  border-radius: 5px;\\n  cursor: pointer;\\n\\n  &:hover {\\n    background-color: #ffd43b;\\n    color: white;\\n  }\\n\"])),props=>props.active?\"#FFD43B\":\"#f8f9fa\",props=>props.active?\"white\":\"black\");const PostList=()=>{const{country}=useParams();const[posts,setPosts]=useState([]);const[sortBy,setSortBy]=useState(\"likes\");const countryInfo={canada:{korName:\"캐나다\",flag:\"🇨🇦\"},australia:{korName:\"호주\",flag:\"🇦🇺\"},newzealand:{korName:\"뉴질랜드\",flag:\"🇳🇿\"},england:{korName:\"영국\",flag:\"🇬🇧\"},netherlands:{korName:\"네덜란드\",flag:\"🇳🇱\"},germany:{korName:\"독일\",flag:\"🇩🇪\"}};const fetchPosts=useCallback(async()=>{try{const response=await axios.get(\"http://43.200.226.225/swagger/intern/community\");return response.data;}catch(error){console.error(\"Error fetching posts:\",error);return[];}},[country]);useEffect(()=>{const getPosts=async()=>{const fetchedPosts=await fetchPosts();setPosts(fetchedPosts);};getPosts();},[fetchPosts]);const CountryDisplay=()=>{const info=countryInfo[country]||{korName:country,flag:\"🏳️\"};return/*#__PURE__*/_jsxs(Country,{children:[info.korName,\" \",info.flag]});};const sortPosts=useCallback(postsToSort=>{return[...postsToSort].sort((a,b)=>{if(sortBy===\"likes\"){return b.likes-a.likes;}else{return new Date(b.date)-new Date(a.date);}});},[sortBy]);useEffect(()=>{setPosts(prevPosts=>sortPosts(prevPosts));},[sortBy,sortPosts]);const handleSortChange=newSortBy=>{setSortBy(newSortBy);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(PageLayout,{children:[/*#__PURE__*/_jsx(Sidebar,{}),/*#__PURE__*/_jsxs(MainContent,{children:[/*#__PURE__*/_jsx(CountryDisplay,{}),/*#__PURE__*/_jsxs(FilterButtons,{children:[/*#__PURE__*/_jsx(FilterButton,{onClick:()=>handleSortChange(\"likes\"),active:sortBy===\"likes\",children:\"\\uC88B\\uC544\\uC694 \\uC21C\"}),/*#__PURE__*/_jsx(FilterButton,{onClick:()=>handleSortChange(\"date\"),active:sortBy===\"date\",children:\"\\uCD5C\\uC2E0\\uC21C\"})]}),/*#__PURE__*/_jsx(PostGrid,{children:posts.map(post=>/*#__PURE__*/_jsx(StyledLink,{to:\"/postread/\".concat(post.id),children:/*#__PURE__*/_jsx(PostCard,{title:post.title,likes:post.likes,author:post.author,date:post.date,preview:post.preview,continent:post.continent,country:post.country},post.id)},post.id))})]})]})]});};export default PostList;","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","Header","Sidebar","PostCard","useParams","Link","axios","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","PageLayout","div","_templateObject","_taggedTemplateLiteral","MainContent","main","_templateObject2","PostGrid","_templateObject3","StyledLink","_templateObject4","Country","_templateObject5","FilterButtons","_templateObject6","FilterButton","button","_templateObject7","props","active","PostList","country","posts","setPosts","sortBy","setSortBy","countryInfo","canada","korName","flag","australia","newzealand","england","netherlands","germany","fetchPosts","response","get","data","error","console","getPosts","fetchedPosts","CountryDisplay","info","children","sortPosts","postsToSort","sort","a","b","likes","Date","date","prevPosts","handleSortChange","newSortBy","onClick","map","post","to","concat","id","title","author","preview","continent"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/FE/src/pages/PostList.jsx"],"sourcesContent":["//PostList.jsx\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"../components/Header\";\nimport Sidebar from \"../components/Sidebar\";\nimport PostCard from \"../components/PostCard\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nconst PageLayout = styled.div`\n  display: flex;\n  min-height: 100vh;\n`;\n\nconst MainContent = styled.main`\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #f5f5f5;\n`;\n\nconst PostGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n`;\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  /* 원하는 다른 스타일도 추가할 수 있습니다 */\n  color: inherit; /* 링크 색상을 부모 요소의 색상으로 상속 */\n`;\n\nconst Country = styled.div`\n  color: #333;\n  margin: 0;\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nconst FilterButtons = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst FilterButton = styled.button`\n  margin-right: 10px;\n  padding: 5px 10px;\n  background-color: ${(props) => (props.active ? \"#FFD43B\" : \"#f8f9fa\")};\n  color: ${(props) => (props.active ? \"white\" : \"black\")};\n  border: 1px solid #ffd43b;\n  border-radius: 5px;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #ffd43b;\n    color: white;\n  }\n`;\n\nconst PostList = () => {\n  const { country } = useParams();\n  const [posts, setPosts] = useState([]);\n  const [sortBy, setSortBy] = useState(\"likes\");\n  const countryInfo = {\n    canada: { korName: \"캐나다\", flag: \"🇨🇦\" },\n    australia: { korName: \"호주\", flag: \"🇦🇺\" },\n    newzealand: { korName: \"뉴질랜드\", flag: \"🇳🇿\" },\n    england: { korName: \"영국\", flag: \"🇬🇧\" },\n    netherlands: { korName: \"네덜란드\", flag: \"🇳🇱\" },\n    germany: { korName: \"독일\", flag: \"🇩🇪\" },\n  };\n\n  const fetchPosts = useCallback(async () => {\n    try {\n      const response = await axios.get(`http://43.200.226.225/swagger/intern/community`);\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching posts:\", error);\n      return [];\n    }\n  }, [country]);\n\n  useEffect(() => {\n    const getPosts = async () => {\n      const fetchedPosts = await fetchPosts();\n      setPosts(fetchedPosts);\n    };\n    getPosts();\n  }, [fetchPosts]);\n\n  const CountryDisplay = () => {\n    const info = countryInfo[country] || { korName: country, flag: \"🏳️\" };\n    return (\n      <Country>\n        {info.korName} {info.flag}\n      </Country>\n    );\n  };\n\n  const sortPosts = useCallback(\n    (postsToSort) => {\n      return [...postsToSort].sort((a, b) => {\n        if (sortBy === \"likes\") {\n          return b.likes - a.likes;\n        } else {\n          return new Date(b.date) - new Date(a.date);\n        }\n      });\n    },\n    [sortBy]\n  );\n\n  useEffect(() => {\n    setPosts((prevPosts) => sortPosts(prevPosts));\n  }, [sortBy, sortPosts]);\n\n  const handleSortChange = (newSortBy) => {\n    setSortBy(newSortBy);\n  };\n\n  return (\n    <>\n      <Header />\n      <PageLayout>\n        <Sidebar />\n        <MainContent>\n          <CountryDisplay />\n          <FilterButtons>\n            <FilterButton\n              onClick={() => handleSortChange(\"likes\")}\n              active={sortBy === \"likes\"}\n            >\n              좋아요 순\n            </FilterButton>\n            <FilterButton\n              onClick={() => handleSortChange(\"date\")}\n              active={sortBy === \"date\"}\n            >\n              최신순\n            </FilterButton>\n          </FilterButtons>\n          <PostGrid>\n            {posts.map((post) => (\n              <StyledLink key={post.id} to={`/postread/${post.id}`}>\n                <PostCard\n                  key={post.id}\n                  title={post.title}\n                  likes={post.likes}\n                  author={post.author}\n                  date={post.date}\n                  preview={post.preview}\n                  continent={post.continent}\n                  country={post.country}\n                />\n              </StyledLink>\n            ))}\n          </PostGrid>\n        </MainContent>\n      </PageLayout>\n    </>\n  );\n};\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}