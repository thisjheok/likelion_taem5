{"ast":null,"code":"var _jsxFileName = \"/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\n\n// ... 기존의 styled components ...\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // 여기서 DB나 API로부터 데이터를 가져옵니다.\n    // 예시 데이터:\n    const fetchedPosts = [{\n      id: 1,\n      title: \"파리에서의 3일\",\n      likes: 42,\n      author: \"여행자123\",\n      date: \"2023-07-15\",\n      preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n      continent: \"유럽\",\n      country: \"프랑스\"\n    }, {\n      id: 2,\n      title: \"베르사유 궁전 탐방\",\n      likes: 38,\n      author: \"역사탐험가\",\n      date: \"2023-07-20\",\n      preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n      continent: \"유럽\",\n      country: \"프랑스\"\n    }\n    // ... 더 많은 포스트 데이터\n    ];\n\n    // 좋아요 수에 따라 내림차순 정렬\n    const sortedPosts = fetchedPosts.sort((a, b) => b.likes - a.likes);\n    setPosts(sortedPosts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n        children: [/*#__PURE__*/_jsxDEV(Country, {\n          children: \"\\uD504\\uB791\\uC2A4\\uD83C\\uDDEB\\uD83C\\uDDF7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PostGrid, {\n          children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n            title: post.title,\n            likes: post.likes,\n            author: post.author,\n            date: post.date,\n            preview: post.preview,\n            continent: post.continent,\n            country: post.country\n          }, post.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useEffect","styled","Header","Sidebar","PostCard","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","posts","setPosts","fetchedPosts","id","title","likes","author","date","preview","continent","country","sortedPosts","sort","a","b","children","fileName","_jsxFileName","lineNumber","columnNumber","PageLayout","MainContent","Country","PostGrid","map","post","_c","$RefreshReg$"],"sources":["/Users/jangjaehyeok/LikeLion/inhaHackerton/Frontend/react-team5/src/pages/PostList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Header from '../components/Header';\nimport Sidebar from '../components/Sidebar';\nimport PostCard from '../components/PostCard';\n\n// ... 기존의 styled components ...\n\nconst PostList = () => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        // 여기서 DB나 API로부터 데이터를 가져옵니다.\n        // 예시 데이터:\n        const fetchedPosts = [\n            {\n                id: 1,\n                title: \"파리에서의 3일\",\n                likes: 42,\n                author: \"여행자123\",\n                date: \"2023-07-15\",\n                preview: \"에펠탑부터 루브르 박물관까지, 파리의 주요 명소를 둘러본 여행기입니다.\",\n                continent: \"유럽\",\n                country: \"프랑스\"\n            },\n            {\n                id: 2,\n                title: \"베르사유 궁전 탐방\",\n                likes: 38,\n                author: \"역사탐험가\",\n                date: \"2023-07-20\",\n                preview: \"프랑스의 역사가 살아숨쉬는 베르사유 궁전을 탐방했습니다.\",\n                continent: \"유럽\",\n                country: \"프랑스\"\n            },\n            // ... 더 많은 포스트 데이터\n        ];\n\n        // 좋아요 수에 따라 내림차순 정렬\n        const sortedPosts = fetchedPosts.sort((a, b) => b.likes - a.likes);\n        setPosts(sortedPosts);\n    }, []);\n\n    return (\n        <>\n            <Header />\n            <PageLayout>\n                <Sidebar />\n                <MainContent>\n                    <Country>프랑스🇫🇷</Country>\n                    <PostGrid>\n                        {posts.map(post => (\n                            <PostCard \n                                key={post.id}\n                                title={post.title}\n                                likes={post.likes}\n                                author={post.author}\n                                date={post.date}\n                                preview={post.preview}\n                                continent={post.continent}\n                                country={post.country}\n                            />\n                        ))}\n                    </PostGrid>\n                </MainContent>\n            </PageLayout>\n        </>\n    );\n}\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}